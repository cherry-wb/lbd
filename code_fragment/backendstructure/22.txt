//  Cpu0TargetMachine.cpp
...
// Install an instruction selector pass using
// the ISelDag to gen Cpu0 code.
bool Cpu0PassConfig::addInstSelector() {
  PM->add(createCpu0ISelDag(getCpu0TargetMachine()));
  return false;
}

//  Cpu0ISelDAGToDAG.cpp
/// createCpu0ISelDag - This pass converts a legalized DAG into a 
/// CPU0-specific DAG, ready for instruction scheduling. 
FunctionPass *llvm::createCpu0ISelDag(Cpu0TargetMachine &TM) { 
  return new Cpu0DAGToDAGISel(TM); 
}
